j ->endMath
:: basic math module ::
:: uses 0-10 as swap::

:: multiply :: 
d --mult
m 0
a *0 1
m 1

@2 **0
@3 **1
@4 **0
--loopMult
f *3 1
j ->exitMult
a *4 *2
m 4
s *3 1
m 3
j ->loopMult
--exitMult
@0 *4
e

--endMath