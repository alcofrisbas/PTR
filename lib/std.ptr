:: the label endSTD is similar
to an IFGUARD in C, 
which prevents the accidental
execution of the code in this file ::
j ->endSTD
:: establish a convention for function 
arguments that visually easy to process ::

d --stdCon
$arg1 10
$arg2 11
$arg3 12
$arg4 13
$arg5 14
$arg6 15
e


:: output chars from array at address
in accumulator until reaching a
null char ::
d --print
m 0
a **0 1
m 0 :: add one to the address of the array in memory ::
--loopPrint
f **0 0
j ->endPrint
o **0
a *0 1
m 0 
j ->loopPrint
--endPrint
rel 0 9
e

:: print string, same as array, but ascii ::
d --printSTR
m 0
a **0 1
m 0 :: add one to the address of the array in memory ::
--loopPrintSTR
f **0 0
j ->endPrintSTR
w **0
a *0 1
m 0 
j ->loopPrintSTR
--endPrintSTR
rel 0 9
e

--endSTD